__all__ = ['__version__', 'SOLUTION_NAME', 'URL_PREFIX', 'SETTINGS', 'INFO']

from os.path import dirname
from os.path import split
from socket import gethostname
import sys
from logging import getLogger

from pydantic import Field
from pydantic import RedisDsn
from pydantic import ValidationError
from pydantic import BaseSettings

from hiredis import __version__ as hiredis_version
from aioredis import __version__ as aioredis_version


__version__ = '0.1.0'
SOLUTION_NAME = 'COVER'
URL_PREFIX = split(dirname(__file__))[1]


class Settings(BaseSettings):
    """Par칙metros de execu칞칚o.

    Extenda esta classe com os par칙metros de execu칞칚o da aplica칞칚o.
    """
    HTTP_PORT: int = Field(
            default=8080,
            env='HTTP_PORT',
            description='Porta HTTP para servid칚o REST'
    )
    DATABASE_URL: RedisDsn = Field(env='DATABASE_URL', description='URL de acesso ao database Redis')


try:
    SETTINGS = Settings()

    INFO = (
        f'\n\n{"-" * 100}\n'
        f'Python: {sys.version}\n'
        f'Hostname: {gethostname()}\n'
        f'Infoma칞칫es do microsservi칞o:\n'
        f'    Solu칞칚o: {SOLUTION_NAME}\n'
        f'    Vers칚o: {__version__}\n'
        f'    Prefixo: {URL_PREFIX}\n'
        f'Par칙metros de execu칞칚o:\n'
        f'    {SETTINGS}\n'
        f'Vers칚o das bibliotecas cr칤ticas:\n'
        f'    aioredis: {aioredis_version}\n'
        f'    hiredis: {hiredis_version}\n'
        f'{"-" * 100}\n'
    )

    getLogger().info(INFO)

except ValidationError as err:
    # :TODO: Melhorar a mensagem de erro
    #       para incluir o nome da vari치vel que n칚o foi definida.
    #       Exemplo: HTTP_PORT n칚o foi definido.
    #       Exemplo: DATABASE_URL n칚o foi definido.
    getLogger().critical(
            '游뚿 Alguma vari치vel de ambiente n칚o foi definida. Confira na documenta칞칚o. Erros: \n%s',
            err
    )
    sys.exit(1)
